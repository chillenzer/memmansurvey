\relax 
\providecommand{\transparent@use}[1]{}
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\expandafter \gdef \csname pgfplots@legend@to@name@graphLegend\endcsname {\begingroup \def \pgfplots@legend@to@name {\pgfkeysdef {/pgfplots/every axis legend}{\pgfkeysalso {cells={anchor=center},inner xsep={3pt},inner ysep={2pt},nodes={inner sep=2pt,text depth=0.15em},anchor={north east},shape={rectangle},fill={white},draw={black},at={(0.98,0.98)},at={(1.03,1)},anchor={north west},font={\small }}}\pgfkeysdef {/pgfplots/every legend image post}{}\def \numplots {5}\def \plotnum {0}\def \plotnumofactualtype {0}\matrix [/pgfplots/every axis legend]{\begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble ,start={ \pgfmathparse {\pgfplotbarwidth }\xdef \pgfplotbarwidth@ {\pgfmathresult pt}\pgfmathparse {\pgfplotbarshift }\xdef \pgfplotbarshift@ {\pgfmathresult pt}\pgfplotyzerolevelstreamstart }, end macro=\pgfplotyzerolevelstreamend , point macro=\pgf@plot@ybar@handler }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerybar }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}\let \pgfplotsplothandlersurveydifflen =\pgfplotsplothandlersurveydifflen@snaptonearest \let \pgfplotsplothandlersurveypointattime =\pgfplotsplothandlersurveypointattime@snaptonearest }\pgfkeysdef {/pgfplots/legend image code}{\draw [,/tikz/.cd,bar width=3pt,yshift=-0.2em,bar shift=0pt] plot coordinates {(0cm,0.8em) (2*\pgfplotbarwidth ,0.6em)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {draw={none},OurStyleGraph={\pgfkeysnovalue },x={op},y={perf}}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{\sysname };\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble ,start={ \pgfmathparse {\pgfplotbarwidth }\xdef \pgfplotbarwidth@ {\pgfmathresult pt}\pgfmathparse {\pgfplotbarshift }\xdef \pgfplotbarshift@ {\pgfmathresult pt}\pgfplotyzerolevelstreamstart }, end macro=\pgfplotyzerolevelstreamend , point macro=\pgf@plot@ybar@handler }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerybar }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}\let \pgfplotsplothandlersurveydifflen =\pgfplotsplothandlersurveydifflen@snaptonearest \let \pgfplotsplothandlersurveypointattime =\pgfplotsplothandlersurveypointattime@snaptonearest }\pgfkeysdef {/pgfplots/legend image code}{\draw [,/tikz/.cd,bar width=3pt,yshift=-0.2em,bar shift=0pt] plot coordinates {(0cm,0.8em) (2*\pgfplotbarwidth ,0.6em)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {draw={none},OuroCSGraph={\pgfkeysnovalue },x={op},y={perf}}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{Ouroboros-C-S};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble ,start={ \pgfmathparse {\pgfplotbarwidth }\xdef \pgfplotbarwidth@ {\pgfmathresult pt}\pgfmathparse {\pgfplotbarshift }\xdef \pgfplotbarshift@ {\pgfmathresult pt}\pgfplotyzerolevelstreamstart }, end macro=\pgfplotyzerolevelstreamend , point macro=\pgf@plot@ybar@handler }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerybar }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}\let \pgfplotsplothandlersurveydifflen =\pgfplotsplothandlersurveydifflen@snaptonearest \let \pgfplotsplothandlersurveypointattime =\pgfplotsplothandlersurveypointattime@snaptonearest }\pgfkeysdef {/pgfplots/legend image code}{\draw [,/tikz/.cd,bar width=3pt,yshift=-0.2em,bar shift=0pt] plot coordinates {(0cm,0.8em) (2*\pgfplotbarwidth ,0.6em)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {draw={none},OuroPVAGraph={\pgfkeysnovalue },x={op},y={perf}}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{Ouroboros-P-VA};\\\begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble ,start={ \pgfmathparse {\pgfplotbarwidth }\xdef \pgfplotbarwidth@ {\pgfmathresult pt}\pgfmathparse {\pgfplotbarshift }\xdef \pgfplotbarshift@ {\pgfmathresult pt}\pgfplotyzerolevelstreamstart }, end macro=\pgfplotyzerolevelstreamend , point macro=\pgf@plot@ybar@handler }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerybar }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}\let \pgfplotsplothandlersurveydifflen =\pgfplotsplothandlersurveydifflen@snaptonearest \let \pgfplotsplothandlersurveypointattime =\pgfplotsplothandlersurveypointattime@snaptonearest }\pgfkeysdef {/pgfplots/legend image code}{\draw [,/tikz/.cd,bar width=3pt,yshift=-0.2em,bar shift=0pt] plot coordinates {(0cm,0.8em) (2*\pgfplotbarwidth ,0.6em)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {draw={none},OuroPVLGraph={\pgfkeysnovalue },x={op},y={perf}}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{Ouroboros-P-VL};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble ,start={ \pgfmathparse {\pgfplotbarwidth }\xdef \pgfplotbarwidth@ {\pgfmathresult pt}\pgfmathparse {\pgfplotbarshift }\xdef \pgfplotbarshift@ {\pgfmathresult pt}\pgfplotyzerolevelstreamstart }, end macro=\pgfplotyzerolevelstreamend , point macro=\pgf@plot@ybar@handler }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerybar }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}\let \pgfplotsplothandlersurveydifflen =\pgfplotsplothandlersurveydifflen@snaptonearest \let \pgfplotsplothandlersurveypointattime =\pgfplotsplothandlersurveypointattime@snaptonearest }\pgfkeysdef {/pgfplots/legend image code}{\draw [,/tikz/.cd,bar width=3pt,yshift=-0.2em,bar shift=0pt] plot coordinates {(0cm,0.8em) (2*\pgfplotbarwidth ,0.6em)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {draw={none},RegEffAWGraph={\pgfkeysnovalue },x={op},y={perf}}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{Baseline (RegEff-AW)};\\};}\ifpgfpicture \pgfplots@legend@to@name \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz [/pgfplots/every legend to name picture/.try]{\pgfplots@legend@to@name }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup }
\expandafter \gdef \csname pgfplots@legend@to@name@allocLegend\endcsname {\begingroup \def \pgfplots@legend@to@name {\pgfkeysdef {/pgfplots/every axis legend}{\pgfkeysalso {cells={anchor=center},inner xsep={3pt},inner ysep={2pt},nodes={inner sep=2pt,text depth=0.15em},anchor={north east},shape={rectangle},fill={white},draw={black},at={(0.98,0.98)},at={(1.03,1)},anchor={north west},font={\small }}}\pgfkeysdef {/pgfplots/every legend image post}{}\def \numplots {14}\def \plotnum {0}\def \plotnumofactualtype {0}\matrix [/pgfplots/every axis legend]{\begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {RegEffAW={\pgfkeysnovalue }}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$Baseline (RegEff-AW)$};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {Cuda={\pgfkeysnovalue }}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$CUDA$};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {ScatterAlloc={\pgfkeysnovalue }}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$ScatterAlloc$};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {OuroPS={\pgfkeysnovalue }}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$Ouroboros-P-S$};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {OuroPVA={\pgfkeysnovalue }}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$Ouroboros-P-VA$};\\\begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {OuroPVL={\pgfkeysnovalue }}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$Ouroboros-P-VL$};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {OuroCS={\pgfkeysnovalue }}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$Ouroboros-C-S$};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {OuroCVA={\pgfkeysnovalue }}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$Ouroboros-C-VA$};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {OuroCVL={\pgfkeysnovalue }}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$Ouroboros-C-VL$};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {RegEffC={\pgfkeysnovalue }}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$RegEff-C$};\\\begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {RegEffCF={\pgfkeysnovalue }}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$RegEff-CF$};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {RegEffCM={\pgfkeysnovalue }}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$RegEff-CM$};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {RegEffCFM={\pgfkeysnovalue }}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$RegEff-CFM$};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {color={teal},mark={square*}}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$XMalloc$};\pgfmatrixnextcell \begingroup \def \pgfplots@draw@image {\def \tikz@plot@handler {\pgfkeys {/pgf/plots/@handler options/.cd, start=\relax , end macro=\relax , point macro=\pgfutil@gobble , jump macro=\relax , special macro=\pgfutil@gobble , point macro=\pgf@plot@line@handler , jump=\global \let \pgf@plotstreampoint \pgf@plot@line@handler@move }\begingroup \escapechar =-1 \edef \pgfplotsplothandlername {\string \pgfplothandlerlineto }\pgfmath@smuggleone \pgfplotsplothandlername \endgroup \def \pgfplotsplothandlerLUAfactory {function(axis, pointmetainputhandler) return pgfplots.GenericPlothandler.new("\pgfplotsplothandlername ", axis,pointmetainputhandler) end}\def \pgfplotsplothandlerLUAvisualizerfactory {pgfplots.defaultPlotVisualizerFactory}}\pgfkeysdef {/pgfplots/legend image code}{\draw [/pgfplots/mesh=false,bar width=3pt,bar shift=0pt,mark repeat=2,mark phase=2,] plot coordinates { (0cm,0cm) (0.3cm,0cm) (0.6cm,0cm)};}\pgfkeysdef {/pgfplots/every legend image post}{}\pgfkeyssetvalue {/pgfplots/mark list fill}{.!80!black}\pgfplots@show@small@legendplots {OurStyle={\pgfkeysnovalue }}{}}\ifpgfpicture \pgfplots@draw@image \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz []{\pgfplots@draw@image }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup \pgfmatrixnextcell \node []{$\sysname $};\\};}\ifpgfpicture \pgfplots@legend@to@name \else \expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \begingroup \tikzappendtofigurename {_crossref}\fi \tikz [/pgfplots/every legend to name picture/.try]{\pgfplots@legend@to@name }\expandafter \ifx \csname tikzappendtofigurename\endcsname \relax \else \endgroup \fi \fi \endgroup }
\newlabel{tocindent-1}{0pt}
\newlabel{tocindent0}{0pt}
\newlabel{tocindent1}{0pt}
\newlabel{tocindent2}{0pt}
\newlabel{tocindent3}{0pt}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{graphLegend}{{\expandafter\protect\csname pgfplots@legend@to@name@graphLegend\endcsname}{1}{}{pgfplotslink.0.0}{}}
\newlabel{graphLegend@cref}{{}{[1][1][]1}}
\newlabel{sub@graphLegend}{{}{1}{}{pgfplotslink.0.0}{}}
\newlabel{sub@graphLegend@cref}{{}{[1][1][]1}}
\newlabel{fig:fullOrkut}{{1a}{1}{Performance for insertions and deletions\relax }{figure.caption.1}{}}
\newlabel{fig:fullOrkut@cref}{{[subfigure][1][1]1a}{[1][1][]1}}
\newlabel{sub@fig:fullOrkut}{{a}{1}{Performance for insertions and deletions\relax }{figure.caption.1}{}}
\newlabel{sub@fig:fullOrkut@cref}{{[subfigure][1][1]1a}{[1][1][]1}}
\newlabel{fig:expansionOrkut}{{1b}{1}{Performance for expansions only\relax }{figure.caption.1}{}}
\newlabel{fig:expansionOrkut@cref}{{[subfigure][2][1]1b}{[1][1][]1}}
\newlabel{sub@fig:expansionOrkut}{{b}{1}{Performance for expansions only\relax }{figure.caption.1}{}}
\newlabel{sub@fig:expansionOrkut@cref}{{[subfigure][2][1]1b}{[1][1][]1}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Performance on the graph tests. The y-axis is the mean runtime over 100 iterations. Lower is better.\relax }}{1}{figure.caption.1}\protected@file@percent }
\newlabel{fig::graphFigures}{{1}{1}{Performance on the graph tests. The y-axis is the mean runtime over 100 iterations. Lower is better.\relax }{figure.caption.1}{}}
\newlabel{fig::graphFigures@cref}{{[figure][1][]1}{[1][1][]1}}
\newlabel{allocLegend}{{\expandafter\protect\csname pgfplots@legend@to@name@allocLegend\endcsname}{2}{}{pgfplotslink.0.1}{}}
\newlabel{allocLegend@cref}{{}{[1][1][]2}}
\newlabel{sub@allocLegend}{{}{2}{}{pgfplotslink.0.1}{}}
\newlabel{sub@allocLegend@cref}{{}{[1][1][]2}}
\newlabel{fig:alloc_perf_subfigure}{{2a}{2}{Single-sized allocation\relax }{figure.caption.2}{}}
\newlabel{fig:alloc_perf_subfigure@cref}{{[subfigure][1][2]2a}{[1][1][]2}}
\newlabel{sub@fig:alloc_perf_subfigure}{{a}{2}{Single-sized allocation\relax }{figure.caption.2}{}}
\newlabel{sub@fig:alloc_perf_subfigure@cref}{{[subfigure][1][2]2a}{[1][1][]2}}
\newlabel{fig:free_perf_subfigure}{{2b}{2}{Single-sized free\relax }{figure.caption.2}{}}
\newlabel{fig:free_perf_subfigure@cref}{{[subfigure][2][2]2b}{[1][1][]2}}
\newlabel{sub@fig:free_perf_subfigure}{{b}{2}{Single-sized free\relax }{figure.caption.2}{}}
\newlabel{sub@fig:free_perf_subfigure@cref}{{[subfigure][2][2]2b}{[1][1][]2}}
\newlabel{fig:mixedAllocPerfSubfigure}{{2c}{2}{Mixed-sized allocation\relax }{figure.caption.2}{}}
\newlabel{fig:mixedAllocPerfSubfigure@cref}{{[subfigure][3][2]2c}{[1][1][]2}}
\newlabel{sub@fig:mixedAllocPerfSubfigure}{{c}{2}{Mixed-sized allocation\relax }{figure.caption.2}{}}
\newlabel{sub@fig:mixedAllocPerfSubfigure@cref}{{[subfigure][3][2]2c}{[1][1][]2}}
\newlabel{fig:mixedFreePerfSubfigure}{{2d}{2}{Mixed-size free\relax }{figure.caption.2}{}}
\newlabel{fig:mixedFreePerfSubfigure@cref}{{[subfigure][4][2]2d}{[1][1][]2}}
\newlabel{sub@fig:mixedFreePerfSubfigure}{{d}{2}{Mixed-size free\relax }{figure.caption.2}{}}
\newlabel{sub@fig:mixedFreePerfSubfigure@cref}{{[subfigure][4][2]2d}{[1][1][]2}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Allocation and free performance for single and mixed-size tests. Each allocation/free is handled by a unique thread. The x-axis is the $log_2$ of the allocation size for the single-size tests and the upper range for the mixed-size tests, with the lower range fixed at 16 bytes. The y-axis is median latency per thread across 50 runs. Lower is better.\relax }}{2}{figure.caption.2}\protected@file@percent }
\newlabel{fig:single-size-test}{{2}{2}{Allocation and free performance for single and mixed-size tests. Each allocation/free is handled by a unique thread. The x-axis is the $log_2$ of the allocation size for the single-size tests and the upper range for the mixed-size tests, with the lower range fixed at 16 bytes. The y-axis is median latency per thread across 50 runs. Lower is better.\relax }{figure.caption.2}{}}
\newlabel{fig:single-size-test@cref}{{[figure][2][]2}{[1][1][]2}}
\newlabel{fig:scaleAlloc16}{{3a}{2}{16-byte scaling allocs\relax }{figure.caption.3}{}}
\newlabel{fig:scaleAlloc16@cref}{{[subfigure][1][3]3a}{[1][1][]2}}
\newlabel{sub@fig:scaleAlloc16}{{a}{2}{16-byte scaling allocs\relax }{figure.caption.3}{}}
\newlabel{sub@fig:scaleAlloc16@cref}{{[subfigure][1][3]3a}{[1][1][]2}}
\newlabel{fig:scaleAlloc64}{{3b}{2}{64-byte scaling allocs\relax }{figure.caption.3}{}}
\newlabel{fig:scaleAlloc64@cref}{{[subfigure][2][3]3b}{[1][1][]2}}
\newlabel{sub@fig:scaleAlloc64}{{b}{2}{64-byte scaling allocs\relax }{figure.caption.3}{}}
\newlabel{sub@fig:scaleAlloc64@cref}{{[subfigure][2][3]3b}{[1][1][]2}}
\newlabel{fig:scaleAlloc512}{{3c}{2}{512-byte scaling allocs\relax }{figure.caption.3}{}}
\newlabel{fig:scaleAlloc512@cref}{{[subfigure][3][3]3c}{[1][1][]2}}
\newlabel{sub@fig:scaleAlloc512}{{c}{2}{512-byte scaling allocs\relax }{figure.caption.3}{}}
\newlabel{sub@fig:scaleAlloc512@cref}{{[subfigure][3][3]3c}{[1][1][]2}}
\newlabel{fig:scaleAlloc8192}{{3d}{2}{8192-byte scaling allocs\relax }{figure.caption.3}{}}
\newlabel{fig:scaleAlloc8192@cref}{{[subfigure][4][3]3d}{[1][1][]2}}
\newlabel{sub@fig:scaleAlloc8192}{{d}{2}{8192-byte scaling allocs\relax }{figure.caption.3}{}}
\newlabel{sub@fig:scaleAlloc8192@cref}{{[subfigure][4][3]3d}{[1][1][]2}}
\newlabel{fig:scaleFree16}{{3e}{2}{16-byte scaling frees\relax }{figure.caption.3}{}}
\newlabel{fig:scaleFree16@cref}{{[subfigure][5][3]3e}{[1][1][]2}}
\newlabel{sub@fig:scaleFree16}{{e}{2}{16-byte scaling frees\relax }{figure.caption.3}{}}
\newlabel{sub@fig:scaleFree16@cref}{{[subfigure][5][3]3e}{[1][1][]2}}
\newlabel{fig:scaleFree64}{{3f}{2}{64-byte scaling frees\relax }{figure.caption.3}{}}
\newlabel{fig:scaleFree64@cref}{{[subfigure][6][3]3f}{[1][1][]2}}
\newlabel{sub@fig:scaleFree64}{{f}{2}{64-byte scaling frees\relax }{figure.caption.3}{}}
\newlabel{sub@fig:scaleFree64@cref}{{[subfigure][6][3]3f}{[1][1][]2}}
\newlabel{fig:scaleFree512}{{3g}{2}{512-byte scaling frees\relax }{figure.caption.3}{}}
\newlabel{fig:scaleFree512@cref}{{[subfigure][7][3]3g}{[1][1][]2}}
\newlabel{sub@fig:scaleFree512}{{g}{2}{512-byte scaling frees\relax }{figure.caption.3}{}}
\newlabel{sub@fig:scaleFree512@cref}{{[subfigure][7][3]3g}{[1][1][]2}}
\newlabel{fig:scaleFree8192}{{3h}{2}{8192-byte scaling frees\relax }{figure.caption.3}{}}
\newlabel{fig:scaleFree8192@cref}{{[subfigure][8][3]3h}{[1][1][]2}}
\newlabel{sub@fig:scaleFree8192}{{h}{2}{8192-byte scaling frees\relax }{figure.caption.3}{}}
\newlabel{sub@fig:scaleFree8192@cref}{{[subfigure][8][3]3h}{[1][1][]2}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Scaling allocation tests and free tests for various allocation sizes. The x-axis is the $\log _2$ of the number of threads with the allocation size held constant. The y-axis is the median latency per thread over 50 runs. Lower is better.\relax }}{2}{figure.caption.3}\protected@file@percent }
\newlabel{fig:mixedFragFig}{{4a}{3}{Single-size fragmentation\relax }{figure.caption.4}{}}
\newlabel{fig:mixedFragFig@cref}{{[subfigure][1][4]4a}{[1][1][]3}}
\newlabel{sub@fig:mixedFragFig}{{a}{3}{Single-size fragmentation\relax }{figure.caption.4}{}}
\newlabel{sub@fig:mixedFragFig@cref}{{[subfigure][1][4]4a}{[1][1][]3}}
\newlabel{fig:fragFig}{{4b}{3}{Mixed-size fragmentation\relax }{figure.caption.4}{}}
\newlabel{fig:fragFig@cref}{{[subfigure][2][4]4b}{[1][1][]3}}
\newlabel{sub@fig:fragFig}{{b}{3}{Mixed-size fragmentation\relax }{figure.caption.4}{}}
\newlabel{sub@fig:fragFig@cref}{{[subfigure][2][4]4b}{[1][1][]3}}
\newlabel{fig:oomGraph}{{4c}{3}{Memory utilization\relax }{figure.caption.4}{}}
\newlabel{fig:oomGraph@cref}{{[subfigure][3][4]4c}{[1][1][]3}}
\newlabel{sub@fig:oomGraph}{{c}{3}{Memory utilization\relax }{figure.caption.4}{}}
\newlabel{sub@fig:oomGraph@cref}{{[subfigure][3][4]4c}{[1][1][]3}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Fragmentation performance for both single-sized and mixed-size allocations, along with the memory utilization performance. (a,b) For the fragmentation tests, the x-axis is the allocation size for the single-sized test and the upper bound of the range for the mixed-size test, with the lower bound being fixed at 16 bytes. The y-axis is the difference between the highest and lowest address given for an allocation. Lower is better. (c) For the utilization tests, the y-axis is a ratio compared to the maximum possible number of allocations that could be given. Higher is better.\relax }}{3}{figure.caption.4}\protected@file@percent }
\newlabel{TotPages}{{3}{3}{}{page.3}{}}
\gdef\svg@ink@ver@settings{{\m@ne }{inkscape}{\m@ne }}
\gdef \@abspage@last{3}
